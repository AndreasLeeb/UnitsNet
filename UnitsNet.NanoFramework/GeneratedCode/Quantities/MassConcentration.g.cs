//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by \generate-code.bat.
//
//     Changes to this file will be lost when the code is regenerated.
//     The build server regenerates the code before each build and a pre-build
//     step will regenerate the code on each local build.
//
//     See https://github.com/angularsen/UnitsNet/wiki/Adding-a-New-Unit for how to add or edit units.
//
//     Add CustomCode\Quantities\MyQuantity.extra.cs files to add code to generated quantities.
//     Add UnitDefinitions\MyQuantity.json and run generate-code.bat to generate new units or quantities.
//
// </auto-generated>
//------------------------------------------------------------------------------

// Licensed under MIT No Attribution, see LICENSE file at the root.
// Copyright 2013 Andreas Gullberg Larsen (andreas.larsen84@gmail.com). Maintained at https://github.com/angularsen/UnitsNet.

using System;
using UnitsNet.Units;

namespace UnitsNet
{
    /// <inheritdoc />
    /// <summary>
    ///     In chemistry, the mass concentration ρi (or γi) is defined as the mass of a constituent mi divided by the volume of the mixture V
    /// </summary>
    /// <remarks>
    ///     https://en.wikipedia.org/wiki/Mass_concentration_(chemistry)
    /// </remarks>
    public struct  MassConcentration
    {
        /// <summary>
        ///     The numeric value this quantity was constructed with.
        /// </summary>
        private readonly double _value;

        /// <summary>
        ///     The unit this quantity was constructed with.
        /// </summary>
        private readonly MassConcentrationUnit _unit;

        /// <summary>
        ///     The numeric value this quantity was constructed with.
        /// </summary>
        public double Value => _value;

        /// <inheritdoc />
        public MassConcentrationUnit Unit => _unit;

        /// <summary>
        ///     Creates the quantity with the given numeric value and unit.
        /// </summary>
        /// <param name="value">The numeric value to construct this quantity with.</param>
        /// <param name="unit">The unit representation to construct this quantity with.</param>
        /// <exception cref="ArgumentException">If value is NaN or Infinity.</exception>
        public MassConcentration(double value, MassConcentrationUnit unit)
        {
            _value = value;
            _unit = unit;
        }

        /// <summary>
        ///     The base unit of Duration, which is Second. All conversions go via this value.
        /// </summary>
        public static MassConcentrationUnit BaseUnit { get; } = MassConcentrationUnit.KilogramPerCubicMeter;

        /// <summary>
        /// Represents the largest possible value of Duration
        /// </summary>
        public static MassConcentration MaxValue { get; } = new MassConcentration(double.MaxValue, BaseUnit);

        /// <summary>
        /// Represents the smallest possible value of Duration
        /// </summary>
        public static MassConcentration MinValue { get; } = new MassConcentration(double.MinValue, BaseUnit);

        /// <summary>
        ///     Gets an instance of this quantity with a value of 0 in the base unit Second.
        /// </summary>
        public static MassConcentration Zero { get; } = new MassConcentration(0, BaseUnit);
        #region Conversion Properties

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.CentigramPerDeciliter">CentigramsPerDeciliter</see> as a <see cref="double"/>.
        /// </summary>
        [Obsolete("Use the ToCentigramsPerDeciliter property.")]
        public double CentigramsPerDeciliter => As(MassConcentrationUnit.CentigramPerDeciliter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.CentigramPerLiter">CentigramsPerLiter</see> as a <see cref="double"/>.
        /// </summary>
        [Obsolete("Use the ToCentigramsPerLiter property.")]
        public double CentigramsPerLiter => As(MassConcentrationUnit.CentigramPerLiter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.CentigramPerMicroliter">CentigramsPerMicroliter</see> as a <see cref="double"/>.
        /// </summary>
        [Obsolete("Use the ToCentigramsPerMicroliter property.")]
        public double CentigramsPerMicroliter => As(MassConcentrationUnit.CentigramPerMicroliter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.CentigramPerMilliliter">CentigramsPerMilliliter</see> as a <see cref="double"/>.
        /// </summary>
        [Obsolete("Use the ToCentigramsPerMilliliter property.")]
        public double CentigramsPerMilliliter => As(MassConcentrationUnit.CentigramPerMilliliter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.DecigramPerDeciliter">DecigramsPerDeciliter</see> as a <see cref="double"/>.
        /// </summary>
        [Obsolete("Use the ToDecigramsPerDeciliter property.")]
        public double DecigramsPerDeciliter => As(MassConcentrationUnit.DecigramPerDeciliter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.DecigramPerLiter">DecigramsPerLiter</see> as a <see cref="double"/>.
        /// </summary>
        [Obsolete("Use the ToDecigramsPerLiter property.")]
        public double DecigramsPerLiter => As(MassConcentrationUnit.DecigramPerLiter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.DecigramPerMicroliter">DecigramsPerMicroliter</see> as a <see cref="double"/>.
        /// </summary>
        [Obsolete("Use the ToDecigramsPerMicroliter property.")]
        public double DecigramsPerMicroliter => As(MassConcentrationUnit.DecigramPerMicroliter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.DecigramPerMilliliter">DecigramsPerMilliliter</see> as a <see cref="double"/>.
        /// </summary>
        [Obsolete("Use the ToDecigramsPerMilliliter property.")]
        public double DecigramsPerMilliliter => As(MassConcentrationUnit.DecigramPerMilliliter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.GramPerCubicCentimeter">GramsPerCubicCentimeter</see> as a <see cref="double"/>.
        /// </summary>
        [Obsolete("Use the ToGramsPerCubicCentimeter property.")]
        public double GramsPerCubicCentimeter => As(MassConcentrationUnit.GramPerCubicCentimeter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.GramPerCubicMeter">GramsPerCubicMeter</see> as a <see cref="double"/>.
        /// </summary>
        [Obsolete("Use the ToGramsPerCubicMeter property.")]
        public double GramsPerCubicMeter => As(MassConcentrationUnit.GramPerCubicMeter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.GramPerCubicMillimeter">GramsPerCubicMillimeter</see> as a <see cref="double"/>.
        /// </summary>
        [Obsolete("Use the ToGramsPerCubicMillimeter property.")]
        public double GramsPerCubicMillimeter => As(MassConcentrationUnit.GramPerCubicMillimeter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.GramPerDeciliter">GramsPerDeciliter</see> as a <see cref="double"/>.
        /// </summary>
        [Obsolete("Use the ToGramsPerDeciliter property.")]
        public double GramsPerDeciliter => As(MassConcentrationUnit.GramPerDeciliter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.GramPerLiter">GramsPerLiter</see> as a <see cref="double"/>.
        /// </summary>
        [Obsolete("Use the ToGramsPerLiter property.")]
        public double GramsPerLiter => As(MassConcentrationUnit.GramPerLiter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.GramPerMicroliter">GramsPerMicroliter</see> as a <see cref="double"/>.
        /// </summary>
        [Obsolete("Use the ToGramsPerMicroliter property.")]
        public double GramsPerMicroliter => As(MassConcentrationUnit.GramPerMicroliter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.GramPerMilliliter">GramsPerMilliliter</see> as a <see cref="double"/>.
        /// </summary>
        [Obsolete("Use the ToGramsPerMilliliter property.")]
        public double GramsPerMilliliter => As(MassConcentrationUnit.GramPerMilliliter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.KilogramPerCubicCentimeter">KilogramsPerCubicCentimeter</see> as a <see cref="double"/>.
        /// </summary>
        [Obsolete("Use the ToKilogramsPerCubicCentimeter property.")]
        public double KilogramsPerCubicCentimeter => As(MassConcentrationUnit.KilogramPerCubicCentimeter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.KilogramPerCubicMeter">KilogramsPerCubicMeter</see> as a <see cref="double"/>.
        /// </summary>
        [Obsolete("Use the ToKilogramsPerCubicMeter property.")]
        public double KilogramsPerCubicMeter => As(MassConcentrationUnit.KilogramPerCubicMeter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.KilogramPerCubicMillimeter">KilogramsPerCubicMillimeter</see> as a <see cref="double"/>.
        /// </summary>
        [Obsolete("Use the ToKilogramsPerCubicMillimeter property.")]
        public double KilogramsPerCubicMillimeter => As(MassConcentrationUnit.KilogramPerCubicMillimeter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.KilogramPerLiter">KilogramsPerLiter</see> as a <see cref="double"/>.
        /// </summary>
        [Obsolete("Use the ToKilogramsPerLiter property.")]
        public double KilogramsPerLiter => As(MassConcentrationUnit.KilogramPerLiter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.KilopoundPerCubicFoot">KilopoundsPerCubicFoot</see> as a <see cref="double"/>.
        /// </summary>
        [Obsolete("Use the ToKilopoundsPerCubicFoot property.")]
        public double KilopoundsPerCubicFoot => As(MassConcentrationUnit.KilopoundPerCubicFoot);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.KilopoundPerCubicInch">KilopoundsPerCubicInch</see> as a <see cref="double"/>.
        /// </summary>
        [Obsolete("Use the ToKilopoundsPerCubicInch property.")]
        public double KilopoundsPerCubicInch => As(MassConcentrationUnit.KilopoundPerCubicInch);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.MicrogramPerCubicMeter">MicrogramsPerCubicMeter</see> as a <see cref="double"/>.
        /// </summary>
        [Obsolete("Use the ToMicrogramsPerCubicMeter property.")]
        public double MicrogramsPerCubicMeter => As(MassConcentrationUnit.MicrogramPerCubicMeter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.MicrogramPerDeciliter">MicrogramsPerDeciliter</see> as a <see cref="double"/>.
        /// </summary>
        [Obsolete("Use the ToMicrogramsPerDeciliter property.")]
        public double MicrogramsPerDeciliter => As(MassConcentrationUnit.MicrogramPerDeciliter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.MicrogramPerLiter">MicrogramsPerLiter</see> as a <see cref="double"/>.
        /// </summary>
        [Obsolete("Use the ToMicrogramsPerLiter property.")]
        public double MicrogramsPerLiter => As(MassConcentrationUnit.MicrogramPerLiter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.MicrogramPerMicroliter">MicrogramsPerMicroliter</see> as a <see cref="double"/>.
        /// </summary>
        [Obsolete("Use the ToMicrogramsPerMicroliter property.")]
        public double MicrogramsPerMicroliter => As(MassConcentrationUnit.MicrogramPerMicroliter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.MicrogramPerMilliliter">MicrogramsPerMilliliter</see> as a <see cref="double"/>.
        /// </summary>
        [Obsolete("Use the ToMicrogramsPerMilliliter property.")]
        public double MicrogramsPerMilliliter => As(MassConcentrationUnit.MicrogramPerMilliliter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.MilligramPerCubicMeter">MilligramsPerCubicMeter</see> as a <see cref="double"/>.
        /// </summary>
        [Obsolete("Use the ToMilligramsPerCubicMeter property.")]
        public double MilligramsPerCubicMeter => As(MassConcentrationUnit.MilligramPerCubicMeter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.MilligramPerDeciliter">MilligramsPerDeciliter</see> as a <see cref="double"/>.
        /// </summary>
        [Obsolete("Use the ToMilligramsPerDeciliter property.")]
        public double MilligramsPerDeciliter => As(MassConcentrationUnit.MilligramPerDeciliter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.MilligramPerLiter">MilligramsPerLiter</see> as a <see cref="double"/>.
        /// </summary>
        [Obsolete("Use the ToMilligramsPerLiter property.")]
        public double MilligramsPerLiter => As(MassConcentrationUnit.MilligramPerLiter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.MilligramPerMicroliter">MilligramsPerMicroliter</see> as a <see cref="double"/>.
        /// </summary>
        [Obsolete("Use the ToMilligramsPerMicroliter property.")]
        public double MilligramsPerMicroliter => As(MassConcentrationUnit.MilligramPerMicroliter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.MilligramPerMilliliter">MilligramsPerMilliliter</see> as a <see cref="double"/>.
        /// </summary>
        [Obsolete("Use the ToMilligramsPerMilliliter property.")]
        public double MilligramsPerMilliliter => As(MassConcentrationUnit.MilligramPerMilliliter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.NanogramPerDeciliter">NanogramsPerDeciliter</see> as a <see cref="double"/>.
        /// </summary>
        [Obsolete("Use the ToNanogramsPerDeciliter property.")]
        public double NanogramsPerDeciliter => As(MassConcentrationUnit.NanogramPerDeciliter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.NanogramPerLiter">NanogramsPerLiter</see> as a <see cref="double"/>.
        /// </summary>
        [Obsolete("Use the ToNanogramsPerLiter property.")]
        public double NanogramsPerLiter => As(MassConcentrationUnit.NanogramPerLiter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.NanogramPerMicroliter">NanogramsPerMicroliter</see> as a <see cref="double"/>.
        /// </summary>
        [Obsolete("Use the ToNanogramsPerMicroliter property.")]
        public double NanogramsPerMicroliter => As(MassConcentrationUnit.NanogramPerMicroliter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.NanogramPerMilliliter">NanogramsPerMilliliter</see> as a <see cref="double"/>.
        /// </summary>
        [Obsolete("Use the ToNanogramsPerMilliliter property.")]
        public double NanogramsPerMilliliter => As(MassConcentrationUnit.NanogramPerMilliliter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.OuncePerImperialGallon">OuncesPerImperialGallon</see> as a <see cref="double"/>.
        /// </summary>
        [Obsolete("Use the ToOuncesPerImperialGallon property.")]
        public double OuncesPerImperialGallon => As(MassConcentrationUnit.OuncePerImperialGallon);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.OuncePerUSGallon">OuncesPerUSGallon</see> as a <see cref="double"/>.
        /// </summary>
        [Obsolete("Use the ToOuncesPerUSGallon property.")]
        public double OuncesPerUSGallon => As(MassConcentrationUnit.OuncePerUSGallon);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.PicogramPerDeciliter">PicogramsPerDeciliter</see> as a <see cref="double"/>.
        /// </summary>
        [Obsolete("Use the ToPicogramsPerDeciliter property.")]
        public double PicogramsPerDeciliter => As(MassConcentrationUnit.PicogramPerDeciliter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.PicogramPerLiter">PicogramsPerLiter</see> as a <see cref="double"/>.
        /// </summary>
        [Obsolete("Use the ToPicogramsPerLiter property.")]
        public double PicogramsPerLiter => As(MassConcentrationUnit.PicogramPerLiter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.PicogramPerMicroliter">PicogramsPerMicroliter</see> as a <see cref="double"/>.
        /// </summary>
        [Obsolete("Use the ToPicogramsPerMicroliter property.")]
        public double PicogramsPerMicroliter => As(MassConcentrationUnit.PicogramPerMicroliter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.PicogramPerMilliliter">PicogramsPerMilliliter</see> as a <see cref="double"/>.
        /// </summary>
        [Obsolete("Use the ToPicogramsPerMilliliter property.")]
        public double PicogramsPerMilliliter => As(MassConcentrationUnit.PicogramPerMilliliter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.PoundPerCubicFoot">PoundsPerCubicFoot</see> as a <see cref="double"/>.
        /// </summary>
        [Obsolete("Use the ToPoundsPerCubicFoot property.")]
        public double PoundsPerCubicFoot => As(MassConcentrationUnit.PoundPerCubicFoot);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.PoundPerCubicInch">PoundsPerCubicInch</see> as a <see cref="double"/>.
        /// </summary>
        [Obsolete("Use the ToPoundsPerCubicInch property.")]
        public double PoundsPerCubicInch => As(MassConcentrationUnit.PoundPerCubicInch);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.PoundPerImperialGallon">PoundsPerImperialGallon</see> as a <see cref="double"/>.
        /// </summary>
        [Obsolete("Use the ToPoundsPerImperialGallon property.")]
        public double PoundsPerImperialGallon => As(MassConcentrationUnit.PoundPerImperialGallon);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.PoundPerUSGallon">PoundsPerUSGallon</see> as a <see cref="double"/>.
        /// </summary>
        [Obsolete("Use the ToPoundsPerUSGallon property.")]
        public double PoundsPerUSGallon => As(MassConcentrationUnit.PoundPerUSGallon);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.SlugPerCubicFoot">SlugsPerCubicFoot</see> as a <see cref="double"/>.
        /// </summary>
        [Obsolete("Use the ToSlugsPerCubicFoot property.")]
        public double SlugsPerCubicFoot => As(MassConcentrationUnit.SlugPerCubicFoot);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.TonnePerCubicCentimeter">TonnesPerCubicCentimeter</see> as a <see cref="double"/>.
        /// </summary>
        [Obsolete("Use the ToTonnesPerCubicCentimeter property.")]
        public double TonnesPerCubicCentimeter => As(MassConcentrationUnit.TonnePerCubicCentimeter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.TonnePerCubicMeter">TonnesPerCubicMeter</see> as a <see cref="double"/>.
        /// </summary>
        [Obsolete("Use the ToTonnesPerCubicMeter property.")]
        public double TonnesPerCubicMeter => As(MassConcentrationUnit.TonnePerCubicMeter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.TonnePerCubicMillimeter">TonnesPerCubicMillimeter</see> as a <see cref="double"/>.
        /// </summary>
        [Obsolete("Use the ToTonnesPerCubicMillimeter property.")]
        public double TonnesPerCubicMillimeter => As(MassConcentrationUnit.TonnePerCubicMillimeter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.CentigramPerDeciliter">CentigramsPerDeciliter</see>.
        /// </summary>
        public MassConcentration ToCentigramsPerDeciliter => ToUnit(MassConcentrationUnit.CentigramPerDeciliter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.CentigramPerLiter">CentigramsPerLiter</see>.
        /// </summary>
        public MassConcentration ToCentigramsPerLiter => ToUnit(MassConcentrationUnit.CentigramPerLiter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.CentigramPerMicroliter">CentigramsPerMicroliter</see>.
        /// </summary>
        public MassConcentration ToCentigramsPerMicroliter => ToUnit(MassConcentrationUnit.CentigramPerMicroliter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.CentigramPerMilliliter">CentigramsPerMilliliter</see>.
        /// </summary>
        public MassConcentration ToCentigramsPerMilliliter => ToUnit(MassConcentrationUnit.CentigramPerMilliliter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.DecigramPerDeciliter">DecigramsPerDeciliter</see>.
        /// </summary>
        public MassConcentration ToDecigramsPerDeciliter => ToUnit(MassConcentrationUnit.DecigramPerDeciliter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.DecigramPerLiter">DecigramsPerLiter</see>.
        /// </summary>
        public MassConcentration ToDecigramsPerLiter => ToUnit(MassConcentrationUnit.DecigramPerLiter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.DecigramPerMicroliter">DecigramsPerMicroliter</see>.
        /// </summary>
        public MassConcentration ToDecigramsPerMicroliter => ToUnit(MassConcentrationUnit.DecigramPerMicroliter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.DecigramPerMilliliter">DecigramsPerMilliliter</see>.
        /// </summary>
        public MassConcentration ToDecigramsPerMilliliter => ToUnit(MassConcentrationUnit.DecigramPerMilliliter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.GramPerCubicCentimeter">GramsPerCubicCentimeter</see>.
        /// </summary>
        public MassConcentration ToGramsPerCubicCentimeter => ToUnit(MassConcentrationUnit.GramPerCubicCentimeter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.GramPerCubicMeter">GramsPerCubicMeter</see>.
        /// </summary>
        public MassConcentration ToGramsPerCubicMeter => ToUnit(MassConcentrationUnit.GramPerCubicMeter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.GramPerCubicMillimeter">GramsPerCubicMillimeter</see>.
        /// </summary>
        public MassConcentration ToGramsPerCubicMillimeter => ToUnit(MassConcentrationUnit.GramPerCubicMillimeter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.GramPerDeciliter">GramsPerDeciliter</see>.
        /// </summary>
        public MassConcentration ToGramsPerDeciliter => ToUnit(MassConcentrationUnit.GramPerDeciliter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.GramPerLiter">GramsPerLiter</see>.
        /// </summary>
        public MassConcentration ToGramsPerLiter => ToUnit(MassConcentrationUnit.GramPerLiter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.GramPerMicroliter">GramsPerMicroliter</see>.
        /// </summary>
        public MassConcentration ToGramsPerMicroliter => ToUnit(MassConcentrationUnit.GramPerMicroliter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.GramPerMilliliter">GramsPerMilliliter</see>.
        /// </summary>
        public MassConcentration ToGramsPerMilliliter => ToUnit(MassConcentrationUnit.GramPerMilliliter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.KilogramPerCubicCentimeter">KilogramsPerCubicCentimeter</see>.
        /// </summary>
        public MassConcentration ToKilogramsPerCubicCentimeter => ToUnit(MassConcentrationUnit.KilogramPerCubicCentimeter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.KilogramPerCubicMeter">KilogramsPerCubicMeter</see>.
        /// </summary>
        public MassConcentration ToKilogramsPerCubicMeter => ToUnit(MassConcentrationUnit.KilogramPerCubicMeter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.KilogramPerCubicMillimeter">KilogramsPerCubicMillimeter</see>.
        /// </summary>
        public MassConcentration ToKilogramsPerCubicMillimeter => ToUnit(MassConcentrationUnit.KilogramPerCubicMillimeter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.KilogramPerLiter">KilogramsPerLiter</see>.
        /// </summary>
        public MassConcentration ToKilogramsPerLiter => ToUnit(MassConcentrationUnit.KilogramPerLiter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.KilopoundPerCubicFoot">KilopoundsPerCubicFoot</see>.
        /// </summary>
        public MassConcentration ToKilopoundsPerCubicFoot => ToUnit(MassConcentrationUnit.KilopoundPerCubicFoot);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.KilopoundPerCubicInch">KilopoundsPerCubicInch</see>.
        /// </summary>
        public MassConcentration ToKilopoundsPerCubicInch => ToUnit(MassConcentrationUnit.KilopoundPerCubicInch);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.MicrogramPerCubicMeter">MicrogramsPerCubicMeter</see>.
        /// </summary>
        public MassConcentration ToMicrogramsPerCubicMeter => ToUnit(MassConcentrationUnit.MicrogramPerCubicMeter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.MicrogramPerDeciliter">MicrogramsPerDeciliter</see>.
        /// </summary>
        public MassConcentration ToMicrogramsPerDeciliter => ToUnit(MassConcentrationUnit.MicrogramPerDeciliter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.MicrogramPerLiter">MicrogramsPerLiter</see>.
        /// </summary>
        public MassConcentration ToMicrogramsPerLiter => ToUnit(MassConcentrationUnit.MicrogramPerLiter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.MicrogramPerMicroliter">MicrogramsPerMicroliter</see>.
        /// </summary>
        public MassConcentration ToMicrogramsPerMicroliter => ToUnit(MassConcentrationUnit.MicrogramPerMicroliter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.MicrogramPerMilliliter">MicrogramsPerMilliliter</see>.
        /// </summary>
        public MassConcentration ToMicrogramsPerMilliliter => ToUnit(MassConcentrationUnit.MicrogramPerMilliliter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.MilligramPerCubicMeter">MilligramsPerCubicMeter</see>.
        /// </summary>
        public MassConcentration ToMilligramsPerCubicMeter => ToUnit(MassConcentrationUnit.MilligramPerCubicMeter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.MilligramPerDeciliter">MilligramsPerDeciliter</see>.
        /// </summary>
        public MassConcentration ToMilligramsPerDeciliter => ToUnit(MassConcentrationUnit.MilligramPerDeciliter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.MilligramPerLiter">MilligramsPerLiter</see>.
        /// </summary>
        public MassConcentration ToMilligramsPerLiter => ToUnit(MassConcentrationUnit.MilligramPerLiter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.MilligramPerMicroliter">MilligramsPerMicroliter</see>.
        /// </summary>
        public MassConcentration ToMilligramsPerMicroliter => ToUnit(MassConcentrationUnit.MilligramPerMicroliter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.MilligramPerMilliliter">MilligramsPerMilliliter</see>.
        /// </summary>
        public MassConcentration ToMilligramsPerMilliliter => ToUnit(MassConcentrationUnit.MilligramPerMilliliter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.NanogramPerDeciliter">NanogramsPerDeciliter</see>.
        /// </summary>
        public MassConcentration ToNanogramsPerDeciliter => ToUnit(MassConcentrationUnit.NanogramPerDeciliter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.NanogramPerLiter">NanogramsPerLiter</see>.
        /// </summary>
        public MassConcentration ToNanogramsPerLiter => ToUnit(MassConcentrationUnit.NanogramPerLiter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.NanogramPerMicroliter">NanogramsPerMicroliter</see>.
        /// </summary>
        public MassConcentration ToNanogramsPerMicroliter => ToUnit(MassConcentrationUnit.NanogramPerMicroliter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.NanogramPerMilliliter">NanogramsPerMilliliter</see>.
        /// </summary>
        public MassConcentration ToNanogramsPerMilliliter => ToUnit(MassConcentrationUnit.NanogramPerMilliliter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.OuncePerImperialGallon">OuncesPerImperialGallon</see>.
        /// </summary>
        public MassConcentration ToOuncesPerImperialGallon => ToUnit(MassConcentrationUnit.OuncePerImperialGallon);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.OuncePerUSGallon">OuncesPerUSGallon</see>.
        /// </summary>
        public MassConcentration ToOuncesPerUSGallon => ToUnit(MassConcentrationUnit.OuncePerUSGallon);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.PicogramPerDeciliter">PicogramsPerDeciliter</see>.
        /// </summary>
        public MassConcentration ToPicogramsPerDeciliter => ToUnit(MassConcentrationUnit.PicogramPerDeciliter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.PicogramPerLiter">PicogramsPerLiter</see>.
        /// </summary>
        public MassConcentration ToPicogramsPerLiter => ToUnit(MassConcentrationUnit.PicogramPerLiter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.PicogramPerMicroliter">PicogramsPerMicroliter</see>.
        /// </summary>
        public MassConcentration ToPicogramsPerMicroliter => ToUnit(MassConcentrationUnit.PicogramPerMicroliter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.PicogramPerMilliliter">PicogramsPerMilliliter</see>.
        /// </summary>
        public MassConcentration ToPicogramsPerMilliliter => ToUnit(MassConcentrationUnit.PicogramPerMilliliter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.PoundPerCubicFoot">PoundsPerCubicFoot</see>.
        /// </summary>
        public MassConcentration ToPoundsPerCubicFoot => ToUnit(MassConcentrationUnit.PoundPerCubicFoot);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.PoundPerCubicInch">PoundsPerCubicInch</see>.
        /// </summary>
        public MassConcentration ToPoundsPerCubicInch => ToUnit(MassConcentrationUnit.PoundPerCubicInch);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.PoundPerImperialGallon">PoundsPerImperialGallon</see>.
        /// </summary>
        public MassConcentration ToPoundsPerImperialGallon => ToUnit(MassConcentrationUnit.PoundPerImperialGallon);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.PoundPerUSGallon">PoundsPerUSGallon</see>.
        /// </summary>
        public MassConcentration ToPoundsPerUSGallon => ToUnit(MassConcentrationUnit.PoundPerUSGallon);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.SlugPerCubicFoot">SlugsPerCubicFoot</see>.
        /// </summary>
        public MassConcentration ToSlugsPerCubicFoot => ToUnit(MassConcentrationUnit.SlugPerCubicFoot);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.TonnePerCubicCentimeter">TonnesPerCubicCentimeter</see>.
        /// </summary>
        public MassConcentration ToTonnesPerCubicCentimeter => ToUnit(MassConcentrationUnit.TonnePerCubicCentimeter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.TonnePerCubicMeter">TonnesPerCubicMeter</see>.
        /// </summary>
        public MassConcentration ToTonnesPerCubicMeter => ToUnit(MassConcentrationUnit.TonnePerCubicMeter);

        /// <summary>
        ///     Gets this <see cref="MassConcentration"/> converted into <see cref="MassConcentrationUnit.TonnePerCubicMillimeter">TonnesPerCubicMillimeter</see>.
        /// </summary>
        public MassConcentration ToTonnesPerCubicMillimeter => ToUnit(MassConcentrationUnit.TonnePerCubicMillimeter);

        #endregion

        #region Static Factory Methods

        /// <summary>
        ///     Creates a <see cref="MassConcentration"/> from <see cref="MassConcentrationUnit.CentigramPerDeciliter"/>.
        /// </summary>
        /// <exception cref="ArgumentException">If value is NaN or Infinity.</exception>
        public static MassConcentration FromCentigramsPerDeciliter(double centigramsperdeciliter) => new MassConcentration(centigramsperdeciliter, MassConcentrationUnit.CentigramPerDeciliter);

        /// <summary>
        ///     Creates a <see cref="MassConcentration"/> from <see cref="MassConcentrationUnit.CentigramPerLiter"/>.
        /// </summary>
        /// <exception cref="ArgumentException">If value is NaN or Infinity.</exception>
        public static MassConcentration FromCentigramsPerLiter(double centigramsperliter) => new MassConcentration(centigramsperliter, MassConcentrationUnit.CentigramPerLiter);

        /// <summary>
        ///     Creates a <see cref="MassConcentration"/> from <see cref="MassConcentrationUnit.CentigramPerMicroliter"/>.
        /// </summary>
        /// <exception cref="ArgumentException">If value is NaN or Infinity.</exception>
        public static MassConcentration FromCentigramsPerMicroliter(double centigramspermicroliter) => new MassConcentration(centigramspermicroliter, MassConcentrationUnit.CentigramPerMicroliter);

        /// <summary>
        ///     Creates a <see cref="MassConcentration"/> from <see cref="MassConcentrationUnit.CentigramPerMilliliter"/>.
        /// </summary>
        /// <exception cref="ArgumentException">If value is NaN or Infinity.</exception>
        public static MassConcentration FromCentigramsPerMilliliter(double centigramspermilliliter) => new MassConcentration(centigramspermilliliter, MassConcentrationUnit.CentigramPerMilliliter);

        /// <summary>
        ///     Creates a <see cref="MassConcentration"/> from <see cref="MassConcentrationUnit.DecigramPerDeciliter"/>.
        /// </summary>
        /// <exception cref="ArgumentException">If value is NaN or Infinity.</exception>
        public static MassConcentration FromDecigramsPerDeciliter(double decigramsperdeciliter) => new MassConcentration(decigramsperdeciliter, MassConcentrationUnit.DecigramPerDeciliter);

        /// <summary>
        ///     Creates a <see cref="MassConcentration"/> from <see cref="MassConcentrationUnit.DecigramPerLiter"/>.
        /// </summary>
        /// <exception cref="ArgumentException">If value is NaN or Infinity.</exception>
        public static MassConcentration FromDecigramsPerLiter(double decigramsperliter) => new MassConcentration(decigramsperliter, MassConcentrationUnit.DecigramPerLiter);

        /// <summary>
        ///     Creates a <see cref="MassConcentration"/> from <see cref="MassConcentrationUnit.DecigramPerMicroliter"/>.
        /// </summary>
        /// <exception cref="ArgumentException">If value is NaN or Infinity.</exception>
        public static MassConcentration FromDecigramsPerMicroliter(double decigramspermicroliter) => new MassConcentration(decigramspermicroliter, MassConcentrationUnit.DecigramPerMicroliter);

        /// <summary>
        ///     Creates a <see cref="MassConcentration"/> from <see cref="MassConcentrationUnit.DecigramPerMilliliter"/>.
        /// </summary>
        /// <exception cref="ArgumentException">If value is NaN or Infinity.</exception>
        public static MassConcentration FromDecigramsPerMilliliter(double decigramspermilliliter) => new MassConcentration(decigramspermilliliter, MassConcentrationUnit.DecigramPerMilliliter);

        /// <summary>
        ///     Creates a <see cref="MassConcentration"/> from <see cref="MassConcentrationUnit.GramPerCubicCentimeter"/>.
        /// </summary>
        /// <exception cref="ArgumentException">If value is NaN or Infinity.</exception>
        public static MassConcentration FromGramsPerCubicCentimeter(double gramspercubiccentimeter) => new MassConcentration(gramspercubiccentimeter, MassConcentrationUnit.GramPerCubicCentimeter);

        /// <summary>
        ///     Creates a <see cref="MassConcentration"/> from <see cref="MassConcentrationUnit.GramPerCubicMeter"/>.
        /// </summary>
        /// <exception cref="ArgumentException">If value is NaN or Infinity.</exception>
        public static MassConcentration FromGramsPerCubicMeter(double gramspercubicmeter) => new MassConcentration(gramspercubicmeter, MassConcentrationUnit.GramPerCubicMeter);

        /// <summary>
        ///     Creates a <see cref="MassConcentration"/> from <see cref="MassConcentrationUnit.GramPerCubicMillimeter"/>.
        /// </summary>
        /// <exception cref="ArgumentException">If value is NaN or Infinity.</exception>
        public static MassConcentration FromGramsPerCubicMillimeter(double gramspercubicmillimeter) => new MassConcentration(gramspercubicmillimeter, MassConcentrationUnit.GramPerCubicMillimeter);

        /// <summary>
        ///     Creates a <see cref="MassConcentration"/> from <see cref="MassConcentrationUnit.GramPerDeciliter"/>.
        /// </summary>
        /// <exception cref="ArgumentException">If value is NaN or Infinity.</exception>
        public static MassConcentration FromGramsPerDeciliter(double gramsperdeciliter) => new MassConcentration(gramsperdeciliter, MassConcentrationUnit.GramPerDeciliter);

        /// <summary>
        ///     Creates a <see cref="MassConcentration"/> from <see cref="MassConcentrationUnit.GramPerLiter"/>.
        /// </summary>
        /// <exception cref="ArgumentException">If value is NaN or Infinity.</exception>
        public static MassConcentration FromGramsPerLiter(double gramsperliter) => new MassConcentration(gramsperliter, MassConcentrationUnit.GramPerLiter);

        /// <summary>
        ///     Creates a <see cref="MassConcentration"/> from <see cref="MassConcentrationUnit.GramPerMicroliter"/>.
        /// </summary>
        /// <exception cref="ArgumentException">If value is NaN or Infinity.</exception>
        public static MassConcentration FromGramsPerMicroliter(double gramspermicroliter) => new MassConcentration(gramspermicroliter, MassConcentrationUnit.GramPerMicroliter);

        /// <summary>
        ///     Creates a <see cref="MassConcentration"/> from <see cref="MassConcentrationUnit.GramPerMilliliter"/>.
        /// </summary>
        /// <exception cref="ArgumentException">If value is NaN or Infinity.</exception>
        public static MassConcentration FromGramsPerMilliliter(double gramspermilliliter) => new MassConcentration(gramspermilliliter, MassConcentrationUnit.GramPerMilliliter);

        /// <summary>
        ///     Creates a <see cref="MassConcentration"/> from <see cref="MassConcentrationUnit.KilogramPerCubicCentimeter"/>.
        /// </summary>
        /// <exception cref="ArgumentException">If value is NaN or Infinity.</exception>
        public static MassConcentration FromKilogramsPerCubicCentimeter(double kilogramspercubiccentimeter) => new MassConcentration(kilogramspercubiccentimeter, MassConcentrationUnit.KilogramPerCubicCentimeter);

        /// <summary>
        ///     Creates a <see cref="MassConcentration"/> from <see cref="MassConcentrationUnit.KilogramPerCubicMeter"/>.
        /// </summary>
        /// <exception cref="ArgumentException">If value is NaN or Infinity.</exception>
        public static MassConcentration FromKilogramsPerCubicMeter(double kilogramspercubicmeter) => new MassConcentration(kilogramspercubicmeter, MassConcentrationUnit.KilogramPerCubicMeter);

        /// <summary>
        ///     Creates a <see cref="MassConcentration"/> from <see cref="MassConcentrationUnit.KilogramPerCubicMillimeter"/>.
        /// </summary>
        /// <exception cref="ArgumentException">If value is NaN or Infinity.</exception>
        public static MassConcentration FromKilogramsPerCubicMillimeter(double kilogramspercubicmillimeter) => new MassConcentration(kilogramspercubicmillimeter, MassConcentrationUnit.KilogramPerCubicMillimeter);

        /// <summary>
        ///     Creates a <see cref="MassConcentration"/> from <see cref="MassConcentrationUnit.KilogramPerLiter"/>.
        /// </summary>
        /// <exception cref="ArgumentException">If value is NaN or Infinity.</exception>
        public static MassConcentration FromKilogramsPerLiter(double kilogramsperliter) => new MassConcentration(kilogramsperliter, MassConcentrationUnit.KilogramPerLiter);

        /// <summary>
        ///     Creates a <see cref="MassConcentration"/> from <see cref="MassConcentrationUnit.KilopoundPerCubicFoot"/>.
        /// </summary>
        /// <exception cref="ArgumentException">If value is NaN or Infinity.</exception>
        public static MassConcentration FromKilopoundsPerCubicFoot(double kilopoundspercubicfoot) => new MassConcentration(kilopoundspercubicfoot, MassConcentrationUnit.KilopoundPerCubicFoot);

        /// <summary>
        ///     Creates a <see cref="MassConcentration"/> from <see cref="MassConcentrationUnit.KilopoundPerCubicInch"/>.
        /// </summary>
        /// <exception cref="ArgumentException">If value is NaN or Infinity.</exception>
        public static MassConcentration FromKilopoundsPerCubicInch(double kilopoundspercubicinch) => new MassConcentration(kilopoundspercubicinch, MassConcentrationUnit.KilopoundPerCubicInch);

        /// <summary>
        ///     Creates a <see cref="MassConcentration"/> from <see cref="MassConcentrationUnit.MicrogramPerCubicMeter"/>.
        /// </summary>
        /// <exception cref="ArgumentException">If value is NaN or Infinity.</exception>
        public static MassConcentration FromMicrogramsPerCubicMeter(double microgramspercubicmeter) => new MassConcentration(microgramspercubicmeter, MassConcentrationUnit.MicrogramPerCubicMeter);

        /// <summary>
        ///     Creates a <see cref="MassConcentration"/> from <see cref="MassConcentrationUnit.MicrogramPerDeciliter"/>.
        /// </summary>
        /// <exception cref="ArgumentException">If value is NaN or Infinity.</exception>
        public static MassConcentration FromMicrogramsPerDeciliter(double microgramsperdeciliter) => new MassConcentration(microgramsperdeciliter, MassConcentrationUnit.MicrogramPerDeciliter);

        /// <summary>
        ///     Creates a <see cref="MassConcentration"/> from <see cref="MassConcentrationUnit.MicrogramPerLiter"/>.
        /// </summary>
        /// <exception cref="ArgumentException">If value is NaN or Infinity.</exception>
        public static MassConcentration FromMicrogramsPerLiter(double microgramsperliter) => new MassConcentration(microgramsperliter, MassConcentrationUnit.MicrogramPerLiter);

        /// <summary>
        ///     Creates a <see cref="MassConcentration"/> from <see cref="MassConcentrationUnit.MicrogramPerMicroliter"/>.
        /// </summary>
        /// <exception cref="ArgumentException">If value is NaN or Infinity.</exception>
        public static MassConcentration FromMicrogramsPerMicroliter(double microgramspermicroliter) => new MassConcentration(microgramspermicroliter, MassConcentrationUnit.MicrogramPerMicroliter);

        /// <summary>
        ///     Creates a <see cref="MassConcentration"/> from <see cref="MassConcentrationUnit.MicrogramPerMilliliter"/>.
        /// </summary>
        /// <exception cref="ArgumentException">If value is NaN or Infinity.</exception>
        public static MassConcentration FromMicrogramsPerMilliliter(double microgramspermilliliter) => new MassConcentration(microgramspermilliliter, MassConcentrationUnit.MicrogramPerMilliliter);

        /// <summary>
        ///     Creates a <see cref="MassConcentration"/> from <see cref="MassConcentrationUnit.MilligramPerCubicMeter"/>.
        /// </summary>
        /// <exception cref="ArgumentException">If value is NaN or Infinity.</exception>
        public static MassConcentration FromMilligramsPerCubicMeter(double milligramspercubicmeter) => new MassConcentration(milligramspercubicmeter, MassConcentrationUnit.MilligramPerCubicMeter);

        /// <summary>
        ///     Creates a <see cref="MassConcentration"/> from <see cref="MassConcentrationUnit.MilligramPerDeciliter"/>.
        /// </summary>
        /// <exception cref="ArgumentException">If value is NaN or Infinity.</exception>
        public static MassConcentration FromMilligramsPerDeciliter(double milligramsperdeciliter) => new MassConcentration(milligramsperdeciliter, MassConcentrationUnit.MilligramPerDeciliter);

        /// <summary>
        ///     Creates a <see cref="MassConcentration"/> from <see cref="MassConcentrationUnit.MilligramPerLiter"/>.
        /// </summary>
        /// <exception cref="ArgumentException">If value is NaN or Infinity.</exception>
        public static MassConcentration FromMilligramsPerLiter(double milligramsperliter) => new MassConcentration(milligramsperliter, MassConcentrationUnit.MilligramPerLiter);

        /// <summary>
        ///     Creates a <see cref="MassConcentration"/> from <see cref="MassConcentrationUnit.MilligramPerMicroliter"/>.
        /// </summary>
        /// <exception cref="ArgumentException">If value is NaN or Infinity.</exception>
        public static MassConcentration FromMilligramsPerMicroliter(double milligramspermicroliter) => new MassConcentration(milligramspermicroliter, MassConcentrationUnit.MilligramPerMicroliter);

        /// <summary>
        ///     Creates a <see cref="MassConcentration"/> from <see cref="MassConcentrationUnit.MilligramPerMilliliter"/>.
        /// </summary>
        /// <exception cref="ArgumentException">If value is NaN or Infinity.</exception>
        public static MassConcentration FromMilligramsPerMilliliter(double milligramspermilliliter) => new MassConcentration(milligramspermilliliter, MassConcentrationUnit.MilligramPerMilliliter);

        /// <summary>
        ///     Creates a <see cref="MassConcentration"/> from <see cref="MassConcentrationUnit.NanogramPerDeciliter"/>.
        /// </summary>
        /// <exception cref="ArgumentException">If value is NaN or Infinity.</exception>
        public static MassConcentration FromNanogramsPerDeciliter(double nanogramsperdeciliter) => new MassConcentration(nanogramsperdeciliter, MassConcentrationUnit.NanogramPerDeciliter);

        /// <summary>
        ///     Creates a <see cref="MassConcentration"/> from <see cref="MassConcentrationUnit.NanogramPerLiter"/>.
        /// </summary>
        /// <exception cref="ArgumentException">If value is NaN or Infinity.</exception>
        public static MassConcentration FromNanogramsPerLiter(double nanogramsperliter) => new MassConcentration(nanogramsperliter, MassConcentrationUnit.NanogramPerLiter);

        /// <summary>
        ///     Creates a <see cref="MassConcentration"/> from <see cref="MassConcentrationUnit.NanogramPerMicroliter"/>.
        /// </summary>
        /// <exception cref="ArgumentException">If value is NaN or Infinity.</exception>
        public static MassConcentration FromNanogramsPerMicroliter(double nanogramspermicroliter) => new MassConcentration(nanogramspermicroliter, MassConcentrationUnit.NanogramPerMicroliter);

        /// <summary>
        ///     Creates a <see cref="MassConcentration"/> from <see cref="MassConcentrationUnit.NanogramPerMilliliter"/>.
        /// </summary>
        /// <exception cref="ArgumentException">If value is NaN or Infinity.</exception>
        public static MassConcentration FromNanogramsPerMilliliter(double nanogramspermilliliter) => new MassConcentration(nanogramspermilliliter, MassConcentrationUnit.NanogramPerMilliliter);

        /// <summary>
        ///     Creates a <see cref="MassConcentration"/> from <see cref="MassConcentrationUnit.OuncePerImperialGallon"/>.
        /// </summary>
        /// <exception cref="ArgumentException">If value is NaN or Infinity.</exception>
        public static MassConcentration FromOuncesPerImperialGallon(double ouncesperimperialgallon) => new MassConcentration(ouncesperimperialgallon, MassConcentrationUnit.OuncePerImperialGallon);

        /// <summary>
        ///     Creates a <see cref="MassConcentration"/> from <see cref="MassConcentrationUnit.OuncePerUSGallon"/>.
        /// </summary>
        /// <exception cref="ArgumentException">If value is NaN or Infinity.</exception>
        public static MassConcentration FromOuncesPerUSGallon(double ouncesperusgallon) => new MassConcentration(ouncesperusgallon, MassConcentrationUnit.OuncePerUSGallon);

        /// <summary>
        ///     Creates a <see cref="MassConcentration"/> from <see cref="MassConcentrationUnit.PicogramPerDeciliter"/>.
        /// </summary>
        /// <exception cref="ArgumentException">If value is NaN or Infinity.</exception>
        public static MassConcentration FromPicogramsPerDeciliter(double picogramsperdeciliter) => new MassConcentration(picogramsperdeciliter, MassConcentrationUnit.PicogramPerDeciliter);

        /// <summary>
        ///     Creates a <see cref="MassConcentration"/> from <see cref="MassConcentrationUnit.PicogramPerLiter"/>.
        /// </summary>
        /// <exception cref="ArgumentException">If value is NaN or Infinity.</exception>
        public static MassConcentration FromPicogramsPerLiter(double picogramsperliter) => new MassConcentration(picogramsperliter, MassConcentrationUnit.PicogramPerLiter);

        /// <summary>
        ///     Creates a <see cref="MassConcentration"/> from <see cref="MassConcentrationUnit.PicogramPerMicroliter"/>.
        /// </summary>
        /// <exception cref="ArgumentException">If value is NaN or Infinity.</exception>
        public static MassConcentration FromPicogramsPerMicroliter(double picogramspermicroliter) => new MassConcentration(picogramspermicroliter, MassConcentrationUnit.PicogramPerMicroliter);

        /// <summary>
        ///     Creates a <see cref="MassConcentration"/> from <see cref="MassConcentrationUnit.PicogramPerMilliliter"/>.
        /// </summary>
        /// <exception cref="ArgumentException">If value is NaN or Infinity.</exception>
        public static MassConcentration FromPicogramsPerMilliliter(double picogramspermilliliter) => new MassConcentration(picogramspermilliliter, MassConcentrationUnit.PicogramPerMilliliter);

        /// <summary>
        ///     Creates a <see cref="MassConcentration"/> from <see cref="MassConcentrationUnit.PoundPerCubicFoot"/>.
        /// </summary>
        /// <exception cref="ArgumentException">If value is NaN or Infinity.</exception>
        public static MassConcentration FromPoundsPerCubicFoot(double poundspercubicfoot) => new MassConcentration(poundspercubicfoot, MassConcentrationUnit.PoundPerCubicFoot);

        /// <summary>
        ///     Creates a <see cref="MassConcentration"/> from <see cref="MassConcentrationUnit.PoundPerCubicInch"/>.
        /// </summary>
        /// <exception cref="ArgumentException">If value is NaN or Infinity.</exception>
        public static MassConcentration FromPoundsPerCubicInch(double poundspercubicinch) => new MassConcentration(poundspercubicinch, MassConcentrationUnit.PoundPerCubicInch);

        /// <summary>
        ///     Creates a <see cref="MassConcentration"/> from <see cref="MassConcentrationUnit.PoundPerImperialGallon"/>.
        /// </summary>
        /// <exception cref="ArgumentException">If value is NaN or Infinity.</exception>
        public static MassConcentration FromPoundsPerImperialGallon(double poundsperimperialgallon) => new MassConcentration(poundsperimperialgallon, MassConcentrationUnit.PoundPerImperialGallon);

        /// <summary>
        ///     Creates a <see cref="MassConcentration"/> from <see cref="MassConcentrationUnit.PoundPerUSGallon"/>.
        /// </summary>
        /// <exception cref="ArgumentException">If value is NaN or Infinity.</exception>
        public static MassConcentration FromPoundsPerUSGallon(double poundsperusgallon) => new MassConcentration(poundsperusgallon, MassConcentrationUnit.PoundPerUSGallon);

        /// <summary>
        ///     Creates a <see cref="MassConcentration"/> from <see cref="MassConcentrationUnit.SlugPerCubicFoot"/>.
        /// </summary>
        /// <exception cref="ArgumentException">If value is NaN or Infinity.</exception>
        public static MassConcentration FromSlugsPerCubicFoot(double slugspercubicfoot) => new MassConcentration(slugspercubicfoot, MassConcentrationUnit.SlugPerCubicFoot);

        /// <summary>
        ///     Creates a <see cref="MassConcentration"/> from <see cref="MassConcentrationUnit.TonnePerCubicCentimeter"/>.
        /// </summary>
        /// <exception cref="ArgumentException">If value is NaN or Infinity.</exception>
        public static MassConcentration FromTonnesPerCubicCentimeter(double tonnespercubiccentimeter) => new MassConcentration(tonnespercubiccentimeter, MassConcentrationUnit.TonnePerCubicCentimeter);

        /// <summary>
        ///     Creates a <see cref="MassConcentration"/> from <see cref="MassConcentrationUnit.TonnePerCubicMeter"/>.
        /// </summary>
        /// <exception cref="ArgumentException">If value is NaN or Infinity.</exception>
        public static MassConcentration FromTonnesPerCubicMeter(double tonnespercubicmeter) => new MassConcentration(tonnespercubicmeter, MassConcentrationUnit.TonnePerCubicMeter);

        /// <summary>
        ///     Creates a <see cref="MassConcentration"/> from <see cref="MassConcentrationUnit.TonnePerCubicMillimeter"/>.
        /// </summary>
        /// <exception cref="ArgumentException">If value is NaN or Infinity.</exception>
        public static MassConcentration FromTonnesPerCubicMillimeter(double tonnespercubicmillimeter) => new MassConcentration(tonnespercubicmillimeter, MassConcentrationUnit.TonnePerCubicMillimeter);

        /// <summary>
        ///     Dynamically convert from value and unit enum <see cref="MassConcentrationUnit" /> to <see cref="MassConcentration" />.
        /// </summary>
        /// <param name="value">Value to convert from.</param>
        /// <param name="fromUnit">Unit to convert from.</param>
        /// <returns>MassConcentration unit value.</returns>
        public static MassConcentration From(double value, MassConcentrationUnit fromUnit)
        {
            return new MassConcentration(value, fromUnit);
        }

        #endregion

        #region Conversion Methods

        /// <summary>
        ///     Convert to the unit representation <paramref name="unit" />.
        /// </summary>
        /// <returns>Value converted to the specified unit.</returns>
        public double As(MassConcentrationUnit unit) => GetValueAs(unit);

        /// <summary>
        ///     Converts this Duration to another Duration with the unit representation <paramref name="unit" />.
        /// </summary>
        /// <returns>A Duration with the specified unit.</returns>
        public MassConcentration ToUnit(MassConcentrationUnit unit)
        {
            var convertedValue = GetValueAs(unit);
            return new MassConcentration(convertedValue, unit);
        }

        /// <summary>
        ///     Converts the current value + unit to the base unit.
        ///     This is typically the first step in converting from one unit to another.
        /// </summary>
        /// <returns>The value in the base unit representation.</returns>
        private double GetValueInBaseUnit()
        {
            return Unit switch
            {
                MassConcentrationUnit.CentigramPerDeciliter => (_value / 1e-1) * 1e-2d,
                MassConcentrationUnit.CentigramPerLiter => (_value) * 1e-2d,
                MassConcentrationUnit.CentigramPerMicroliter => (_value / 1e-6) * 1e-2d,
                MassConcentrationUnit.CentigramPerMilliliter => (_value / 1e-3) * 1e-2d,
                MassConcentrationUnit.DecigramPerDeciliter => (_value / 1e-1) * 1e-1d,
                MassConcentrationUnit.DecigramPerLiter => (_value) * 1e-1d,
                MassConcentrationUnit.DecigramPerMicroliter => (_value / 1e-6) * 1e-1d,
                MassConcentrationUnit.DecigramPerMilliliter => (_value / 1e-3) * 1e-1d,
                MassConcentrationUnit.GramPerCubicCentimeter => _value / 1e-3,
                MassConcentrationUnit.GramPerCubicMeter => _value / 1e3,
                MassConcentrationUnit.GramPerCubicMillimeter => _value / 1e-6,
                MassConcentrationUnit.GramPerDeciliter => _value / 1e-1,
                MassConcentrationUnit.GramPerLiter => _value,
                MassConcentrationUnit.GramPerMicroliter => _value / 1e-6,
                MassConcentrationUnit.GramPerMilliliter => _value / 1e-3,
                MassConcentrationUnit.KilogramPerCubicCentimeter => (_value / 1e-3) * 1e3d,
                MassConcentrationUnit.KilogramPerCubicMeter => (_value / 1e3) * 1e3d,
                MassConcentrationUnit.KilogramPerCubicMillimeter => (_value / 1e-6) * 1e3d,
                MassConcentrationUnit.KilogramPerLiter => (_value) * 1e3d,
                MassConcentrationUnit.KilopoundPerCubicFoot => (_value / 0.062427961) * 1e3d,
                MassConcentrationUnit.KilopoundPerCubicInch => (_value / 3.6127298147753e-5) * 1e3d,
                MassConcentrationUnit.MicrogramPerCubicMeter => (_value / 1e3) * 1e-6d,
                MassConcentrationUnit.MicrogramPerDeciliter => (_value / 1e-1) * 1e-6d,
                MassConcentrationUnit.MicrogramPerLiter => (_value) * 1e-6d,
                MassConcentrationUnit.MicrogramPerMicroliter => (_value / 1e-6) * 1e-6d,
                MassConcentrationUnit.MicrogramPerMilliliter => (_value / 1e-3) * 1e-6d,
                MassConcentrationUnit.MilligramPerCubicMeter => (_value / 1e3) * 1e-3d,
                MassConcentrationUnit.MilligramPerDeciliter => (_value / 1e-1) * 1e-3d,
                MassConcentrationUnit.MilligramPerLiter => (_value) * 1e-3d,
                MassConcentrationUnit.MilligramPerMicroliter => (_value / 1e-6) * 1e-3d,
                MassConcentrationUnit.MilligramPerMilliliter => (_value / 1e-3) * 1e-3d,
                MassConcentrationUnit.NanogramPerDeciliter => (_value / 1e-1) * 1e-9d,
                MassConcentrationUnit.NanogramPerLiter => (_value) * 1e-9d,
                MassConcentrationUnit.NanogramPerMicroliter => (_value / 1e-6) * 1e-9d,
                MassConcentrationUnit.NanogramPerMilliliter => (_value / 1e-3) * 1e-9d,
                MassConcentrationUnit.OuncePerImperialGallon =>  _value / 0.1603586720609,
                MassConcentrationUnit.OuncePerUSGallon =>  _value / 0.1335264711843,
                MassConcentrationUnit.PicogramPerDeciliter => (_value / 1e-1) * 1e-12d,
                MassConcentrationUnit.PicogramPerLiter => (_value) * 1e-12d,
                MassConcentrationUnit.PicogramPerMicroliter => (_value / 1e-6) * 1e-12d,
                MassConcentrationUnit.PicogramPerMilliliter => (_value / 1e-3) * 1e-12d,
                MassConcentrationUnit.PoundPerCubicFoot => _value / 0.062427961,
                MassConcentrationUnit.PoundPerCubicInch => _value / 3.6127298147753e-5,
                MassConcentrationUnit.PoundPerImperialGallon => _value * 9.9776398e1,
                MassConcentrationUnit.PoundPerUSGallon => _value * 1.19826427e2,
                MassConcentrationUnit.SlugPerCubicFoot => _value * 515.378818,
                MassConcentrationUnit.TonnePerCubicCentimeter => _value / 1e-9,
                MassConcentrationUnit.TonnePerCubicMeter => _value / 0.001,
                MassConcentrationUnit.TonnePerCubicMillimeter => _value / 1e-12,
                _ => throw new NotImplementedException($"Can not convert {Unit} to base units.")
            };
        }

        private double GetValueAs(MassConcentrationUnit unit)
        {
            if (Unit == unit)
                return _value;

            var baseUnitValue = GetValueInBaseUnit();

            return unit switch
            {
                MassConcentrationUnit.CentigramPerDeciliter => (baseUnitValue * 1e-1) / 1e-2d,
                MassConcentrationUnit.CentigramPerLiter => (baseUnitValue) / 1e-2d,
                MassConcentrationUnit.CentigramPerMicroliter => (baseUnitValue * 1e-6) / 1e-2d,
                MassConcentrationUnit.CentigramPerMilliliter => (baseUnitValue * 1e-3) / 1e-2d,
                MassConcentrationUnit.DecigramPerDeciliter => (baseUnitValue * 1e-1) / 1e-1d,
                MassConcentrationUnit.DecigramPerLiter => (baseUnitValue) / 1e-1d,
                MassConcentrationUnit.DecigramPerMicroliter => (baseUnitValue * 1e-6) / 1e-1d,
                MassConcentrationUnit.DecigramPerMilliliter => (baseUnitValue * 1e-3) / 1e-1d,
                MassConcentrationUnit.GramPerCubicCentimeter => baseUnitValue * 1e-3,
                MassConcentrationUnit.GramPerCubicMeter => baseUnitValue * 1e3,
                MassConcentrationUnit.GramPerCubicMillimeter => baseUnitValue * 1e-6,
                MassConcentrationUnit.GramPerDeciliter => baseUnitValue * 1e-1,
                MassConcentrationUnit.GramPerLiter => baseUnitValue,
                MassConcentrationUnit.GramPerMicroliter => baseUnitValue * 1e-6,
                MassConcentrationUnit.GramPerMilliliter => baseUnitValue * 1e-3,
                MassConcentrationUnit.KilogramPerCubicCentimeter => (baseUnitValue * 1e-3) / 1e3d,
                MassConcentrationUnit.KilogramPerCubicMeter => (baseUnitValue * 1e3) / 1e3d,
                MassConcentrationUnit.KilogramPerCubicMillimeter => (baseUnitValue * 1e-6) / 1e3d,
                MassConcentrationUnit.KilogramPerLiter => (baseUnitValue) / 1e3d,
                MassConcentrationUnit.KilopoundPerCubicFoot => (baseUnitValue * 0.062427961) / 1e3d,
                MassConcentrationUnit.KilopoundPerCubicInch => (baseUnitValue * 3.6127298147753e-5) / 1e3d,
                MassConcentrationUnit.MicrogramPerCubicMeter => (baseUnitValue * 1e3) / 1e-6d,
                MassConcentrationUnit.MicrogramPerDeciliter => (baseUnitValue * 1e-1) / 1e-6d,
                MassConcentrationUnit.MicrogramPerLiter => (baseUnitValue) / 1e-6d,
                MassConcentrationUnit.MicrogramPerMicroliter => (baseUnitValue * 1e-6) / 1e-6d,
                MassConcentrationUnit.MicrogramPerMilliliter => (baseUnitValue * 1e-3) / 1e-6d,
                MassConcentrationUnit.MilligramPerCubicMeter => (baseUnitValue * 1e3) / 1e-3d,
                MassConcentrationUnit.MilligramPerDeciliter => (baseUnitValue * 1e-1) / 1e-3d,
                MassConcentrationUnit.MilligramPerLiter => (baseUnitValue) / 1e-3d,
                MassConcentrationUnit.MilligramPerMicroliter => (baseUnitValue * 1e-6) / 1e-3d,
                MassConcentrationUnit.MilligramPerMilliliter => (baseUnitValue * 1e-3) / 1e-3d,
                MassConcentrationUnit.NanogramPerDeciliter => (baseUnitValue * 1e-1) / 1e-9d,
                MassConcentrationUnit.NanogramPerLiter => (baseUnitValue) / 1e-9d,
                MassConcentrationUnit.NanogramPerMicroliter => (baseUnitValue * 1e-6) / 1e-9d,
                MassConcentrationUnit.NanogramPerMilliliter => (baseUnitValue * 1e-3) / 1e-9d,
                MassConcentrationUnit.OuncePerImperialGallon => baseUnitValue * 0.1603586720609,
                MassConcentrationUnit.OuncePerUSGallon => baseUnitValue * 0.1335264711843,
                MassConcentrationUnit.PicogramPerDeciliter => (baseUnitValue * 1e-1) / 1e-12d,
                MassConcentrationUnit.PicogramPerLiter => (baseUnitValue) / 1e-12d,
                MassConcentrationUnit.PicogramPerMicroliter => (baseUnitValue * 1e-6) / 1e-12d,
                MassConcentrationUnit.PicogramPerMilliliter => (baseUnitValue * 1e-3) / 1e-12d,
                MassConcentrationUnit.PoundPerCubicFoot => baseUnitValue * 0.062427961,
                MassConcentrationUnit.PoundPerCubicInch => baseUnitValue * 3.6127298147753e-5,
                MassConcentrationUnit.PoundPerImperialGallon => baseUnitValue / 9.9776398e1,
                MassConcentrationUnit.PoundPerUSGallon => baseUnitValue / 1.19826427e2,
                MassConcentrationUnit.SlugPerCubicFoot => baseUnitValue * 0.00194032033,
                MassConcentrationUnit.TonnePerCubicCentimeter => baseUnitValue * 1e-9,
                MassConcentrationUnit.TonnePerCubicMeter => baseUnitValue * 0.001,
                MassConcentrationUnit.TonnePerCubicMillimeter => baseUnitValue * 1e-12,
                _ => throw new NotImplementedException($"Can not convert {Unit} to {unit}.")
            };
        }

        #endregion
    }
}

